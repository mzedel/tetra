version: '2'
services:
  api:
    image: tetra-api
    container_name: tetra-api
    depends_on:
      - db
    links:
      - db
    command: |
      bash -c "export PYTHONUNBUFFERED=1 && gunicorn --reload -t 120 --bind 0.0.0.0:7374 --access-logfile - tetra.app:application"
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api/"
      - "traefik.http.routers.tetra-api.entrypoints=http"
      - "traefik.http.routers.tetra-api.rule=Host(`qastatus.mender.io`) && PathPrefix(`/api/`)"
      - "traefik.http.routers.tetra-api.middlewares=api-stripprefix,oauth"
      - "traefik.http.services.tetra-api.loadbalancer.server.port=7374"
  worker:
    image: tetra-api
    container_name: tetra-worker
    depends_on:
      - queue
    links:
      - queue
    # celery has a `--auotreload` flag that doesn't reload dependent modules,
    # so it doesn't work. use `docker-compose restart worker` instead.
    command: |
      su -m tetra-worker -c "celery --app=tetra.worker.app worker --loglevel=INFO"
  db:
    image: postgres:9.5
    container_name: tetra-db
    ports:
      # note: exposing port 5432 here causes issues in travis builds
      - "5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: tetra-db
  queue:
    image: rabbitmq:3.6-management
    container_name: tetra-queue
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: tetra
      RABBITMQ_DEFAULT_PASS: password
  ui:
    image: tetra-ui
    container_name: tetra-ui
    depends_on:
      - api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tetra-ui.entrypoints=http"
      - "traefik.http.routers.tetra-ui.rule=Host(`qastatus.mender.io`)"
      - "traefik.http.routers.tetra-ui.middlewares=oauth"
      - "traefik.http.services.tetra-ui.loadbalancer.server.port=80"
  gateway:
    image: busybox
